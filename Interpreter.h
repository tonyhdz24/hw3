#ifndef INTERPRETER_H
#define INTERPRETER_H

#include "Parser.h"
#include "Tree.h"
#include "Jobs.h"
/**
 * @brief Main entry point for interpreting and executing a parse tree
 *
 * This function serves as the bridge between parsing and execution. It takes
 * a complete parse tree generated by the parser and converts it into executable
 * data structures (Sequence, Pipeline, Command objects), then executes them.
 *
 * The interpretation happens in two phases:
 * 1. Tree walking: Convert parse tree nodes into execution objects
 * 2. Execution: Run the constructed sequence of pipelines and commands
 *
 * @param t Parse tree representing the complete command(s) entered by user
 * @param eof Pointer to EOF flag; set to non-zero if user wants to exit shell
 * @param jobs Job table for tracking background and foreground processes
 *
 * @return void
 */
extern void interpretTree(Tree t, int *eof, Jobs jobs);

#endif
